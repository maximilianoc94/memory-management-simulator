/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.SO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;

/**
 *
 * @author Administrador
 */
public final class Simulador extends javax.swing.JFrame {

    private final SO so;

    /**
     * Creates new form NewJFrame
     */
    public Simulador() {
        initComponents();
        so = new SO(popUpNumero("Ingrese la cantidad de marcos en memoria:", 0));
    }

    public int popUpNumero(String msg, int condicion) {
        int numero = 0;
        do {
            try {
                String input = JOptionPane.showInputDialog(msg);
                if (input == null) {
                    switch (condicion) {
                        case 0: //cancelar memoria
                            System.exit(0);
                            break;
                        case 1: //cancelar proceso
                            return 0;
                        case 2: //terminar secuencia
                            return -1;
                    }
                }
                numero = Integer.parseInt(input);
            } catch (NumberFormatException e) {
                numero = 0;
            }

        } while (numero < 1);
        return numero;
    }

    public void refreshLists() {
        int tamanoRam = so.getRAM().getListaMarcos().size();
        MainMemoryModel.clear();
        for (int i = tamanoRam; i > 0; i--) {
            BackEnd.pagina pagina = so.getRAM().getListaMarcos().get(tamanoRam - i).getPagProceso();
            if (pagina != null) {
                MainMemoryModel.addElement(tamanoRam - i + " - Proceso." + pagina.getNumeroProceso() + "-" + pagina.getNumeroPagina());
            } else {
                MainMemoryModel.addElement(tamanoRam - i + " - ");
            }
        }
        int tamanoDisco = so.getDisco().getListaPaginas().size();
        VirtualMemoryModel.clear();
        for (int i = tamanoDisco; i > 0; i--) {
            BackEnd.pagina pagina = so.getDisco().getListaPaginas().get(tamanoDisco - i);
            if (pagina != null) {
                VirtualMemoryModel.addElement(tamanoDisco - i + " - Proceso." + pagina.getNumeroProceso() + "-" + pagina.getNumeroPagina());
            } else {
                VirtualMemoryModel.addElement(tamanoDisco - i + " - ");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        MMScrollPane = new javax.swing.JScrollPane();
        MainMemoryModel = new DefaultListModel();
        MainMemoryList = new javax.swing.JList<>();
        VMScrollPane = new javax.swing.JScrollPane();
        VirtualMemoryModel = new DefaultListModel();
        VirtualMemoryList = new javax.swing.JList<>();
        ProcessScrollPane = new javax.swing.JScrollPane();
        ModeloProceso = new DefaultListModel();
        ProcessesList = new javax.swing.JList<>();
        MMTag = new javax.swing.JLabel();
        ProcessTag = new javax.swing.JLabel();
        VMTAg = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        TotalPagesTag = new javax.swing.JLabel();
        TotalPages = new javax.swing.JLabel();
        PagesVMTag = new javax.swing.JLabel();
        PagesMMTag = new javax.swing.JLabel();
        RunningTag = new javax.swing.JLabel();
        PagesVM = new javax.swing.JLabel();
        PagesMM = new javax.swing.JLabel();
        Running = new javax.swing.JLabel();
        RemoveButton = new javax.swing.JButton();
        RunButton = new javax.swing.JButton();
        NextPageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto 2 SO - Maximiliano Casale, Gabriel De Lellis");
        setResizable(false);

        Fondo.setBackground(new java.awt.Color(0, 0, 0));

        MainMemoryList.setModel(MainMemoryModel);
        MainMemoryList.setBackground(new java.awt.Color(0, 0, 0));
        MainMemoryList.setForeground(new java.awt.Color(0, 204, 204));
        MMScrollPane.setViewportView(MainMemoryList);

        VirtualMemoryList.setModel(VirtualMemoryModel);
        VirtualMemoryList.setBackground(new java.awt.Color(0, 0, 0));
        VirtualMemoryList.setForeground(new java.awt.Color(0, 204, 204));
        VMScrollPane.setViewportView(VirtualMemoryList);

        ProcessesList.setModel(ModeloProceso);
        ProcessesList.setBackground(new java.awt.Color(0, 0, 0));
        ProcessesList.setForeground(new java.awt.Color(0, 204, 204));
        ProcessesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProcessesListMouseClicked(evt);
            }
        });
        ProcessScrollPane.setViewportView(ProcessesList);

        MMTag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        MMTag.setForeground(new java.awt.Color(0, 204, 204));
        MMTag.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MMTag.setText("Main Memory");

        ProcessTag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProcessTag.setForeground(new java.awt.Color(0, 204, 204));
        ProcessTag.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProcessTag.setText("Processes");

        VMTAg.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        VMTAg.setForeground(new java.awt.Color(0, 204, 204));
        VMTAg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VMTAg.setText("Virtual Memory");

        AddButton.setBackground(new java.awt.Color(0, 0, 0));
        AddButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        AddButton.setForeground(new java.awt.Color(0, 204, 204));
        AddButton.setText("Add");
        AddButton.setToolTipText("Add a new process to the system");
        AddButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        AddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AddButton.setMaximumSize(new java.awt.Dimension(79, 25));
        AddButton.setMinimumSize(new java.awt.Dimension(79, 25));
        AddButton.setPreferredSize(new java.awt.Dimension(79, 25));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        TotalPagesTag.setForeground(new java.awt.Color(0, 204, 204));
        TotalPagesTag.setText("Total Pages:");

        TotalPages.setForeground(new java.awt.Color(0, 204, 204));

        PagesVMTag.setForeground(new java.awt.Color(0, 204, 204));
        PagesVMTag.setText("Pages in VM:");

        PagesMMTag.setForeground(new java.awt.Color(0, 204, 204));
        PagesMMTag.setText("Pages in MM:");

        RunningTag.setForeground(new java.awt.Color(0, 204, 204));
        RunningTag.setText("Running: ");

        PagesVM.setForeground(new java.awt.Color(0, 204, 204));

        PagesMM.setForeground(new java.awt.Color(0, 204, 204));

        Running.setForeground(new java.awt.Color(0, 204, 204));

        RemoveButton.setBackground(new java.awt.Color(0, 0, 0));
        RemoveButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        RemoveButton.setForeground(new java.awt.Color(0, 204, 204));
        RemoveButton.setText("Remove");
        RemoveButton.setToolTipText("Add a new process to the system");
        RemoveButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        RemoveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RemoveButton.setMaximumSize(new java.awt.Dimension(79, 25));
        RemoveButton.setMinimumSize(new java.awt.Dimension(79, 25));
        RemoveButton.setPreferredSize(new java.awt.Dimension(79, 25));
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        RunButton.setBackground(new java.awt.Color(0, 0, 0));
        RunButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        RunButton.setForeground(new java.awt.Color(0, 204, 204));
        RunButton.setText("Run");
        RunButton.setToolTipText("Add a new process to the system");
        RunButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        RunButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RunButton.setMaximumSize(new java.awt.Dimension(79, 25));
        RunButton.setMinimumSize(new java.awt.Dimension(79, 25));
        RunButton.setPreferredSize(new java.awt.Dimension(79, 25));
        RunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonActionPerformed(evt);
            }
        });

        NextPageButton.setBackground(new java.awt.Color(0, 0, 0));
        NextPageButton.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        NextPageButton.setForeground(new java.awt.Color(0, 204, 204));
        NextPageButton.setText("Next Page");
        NextPageButton.setToolTipText("Add a new process to the system");
        NextPageButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        NextPageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        NextPageButton.setMaximumSize(new java.awt.Dimension(79, 25));
        NextPageButton.setMinimumSize(new java.awt.Dimension(79, 25));
        NextPageButton.setPreferredSize(new java.awt.Dimension(79, 25));
        NextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextPageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RunButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NextPageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FondoLayout.createSequentialGroup()
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TotalPagesTag, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PagesMMTag, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PagesVMTag, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RunningTag, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(FondoLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(PagesVM, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PagesMM, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(TotalPages, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(Running, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(ProcessScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(ProcessTag, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VMScrollPane)
                    .addComponent(MMScrollPane)
                    .addComponent(MMTag, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VMTAg, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProcessTag, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MMTag, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProcessScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MMScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(VMTAg, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VMScrollPane))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RunButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TotalPagesTag, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalPages, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PagesVMTag, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PagesVM, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PagesMMTag, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PagesMM, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RunningTag, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Running, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        int cantPag = popUpNumero("Ingrese la cantidad de paginas de este Proceso", 1);
        if (cantPag != 0) {
            so.createProcess(cantPag);
            int result = JOptionPane.showConfirmDialog(null, "Quieres definir un orden de ejecucion?", null, JOptionPane.YES_NO_OPTION);
            BackEnd.proceso p = so.getListaProcesos().get(so.getListaProcesos().size() - 1);
            ArrayList<Integer> orden = new ArrayList<>();
            if (result == JOptionPane.YES_OPTION) {
                boolean condicion = true;
                while (condicion) {
                    int numPag = popUpNumero("Ingrese el numero de pagina de la secuencia: Desde 1 a " + cantPag + "\n Oprima Cancel para terminar", 2);
                    if (numPag != -1) {
                        if (numPag <= cantPag) {
                            orden.add(numPag - 1);
                        } else {
                            JOptionPane.showMessageDialog(null, "El numero no puede ser mayor que la cantidad de paginas!");
                        }
                    } else {
                        if (orden.size() >= cantPag) {
                            condicion = false;
                        } else {
                            JOptionPane.showMessageDialog(null, "Faltan paginas por agregar, continue con la secuencia!");
                        }
                    }
                }
                p.defineOrder(orden);
            } else {
                p.defineOrder();
            }
            ModeloProceso.addElement(so.getListaProcesos().get(so.getListaProcesos().size() - 1).getNombre());
            refreshLists();
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ProcessesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProcessesListMouseClicked
        if (ProcessesList.getSelectedValue() != null) {
            int selected = Integer.parseInt(ProcessesList.getSelectedValue().substring(8));
            if (selected != -1) {
                BackEnd.proceso proceso = so.getListaProcesos().get(selected);
                TotalPages.setText(Integer.toString(so.datosProceso(selected)[0]));
                PagesMM.setText(Integer.toString(so.datosProceso(selected)[1]));
                PagesVM.setText(Integer.toString(so.datosProceso(selected)[2]));
                if (so.datosProceso(selected)[3] == 1) {
                    System.out.println(so.getIntel().getPaginaEjecutando().getNumeroPagina());
                    String enExec = "Pagina - " + so.getIntel().getPaginaEjecutando().getNumeroPagina();
                    Running.setText(enExec);
                } else {
                    Running.setText("False");
                }
            }
        }
    }//GEN-LAST:event_ProcessesListMouseClicked

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        if (ProcessesList.getSelectedValue() != null) {
            int numProceso = Integer.parseInt(ProcessesList.getSelectedValue().substring(8));
            ModeloProceso.remove(ProcessesList.getSelectedIndex());
            so.terminateProcess(numProceso);
            refreshLists();
        }
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void RunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunButtonActionPerformed
        if (ProcessesList.getSelectedValue() != null) {
            so.ejecutarProceso(Integer.parseInt(ProcessesList.getSelectedValue().substring(8)), 0);
        }
        refreshLists();
    }//GEN-LAST:event_RunButtonActionPerformed

    private void NextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextPageButtonActionPerformed
        if (so.siguientePagina()) {
            ModeloProceso.remove(ProcessesList.getSelectedIndex());
        }
        refreshLists();
    }//GEN-LAST:event_NextPageButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Simulador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JPanel Fondo;
    private javax.swing.JScrollPane MMScrollPane;
    private javax.swing.JLabel MMTag;
    private javax.swing.JList<String> MainMemoryList;
    private javax.swing.DefaultListModel MainMemoryModel;
    private javax.swing.JButton NextPageButton;
    private javax.swing.JLabel PagesMM;
    private javax.swing.JLabel PagesMMTag;
    private javax.swing.JLabel PagesVM;
    private javax.swing.JLabel PagesVMTag;
    private javax.swing.JScrollPane ProcessScrollPane;
    private javax.swing.JLabel ProcessTag;
    private javax.swing.JList<String> ProcessesList;
    private javax.swing.DefaultListModel ModeloProceso;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JButton RunButton;
    private javax.swing.JLabel Running;
    private javax.swing.JLabel RunningTag;
    private javax.swing.JLabel TotalPages;
    private javax.swing.JLabel TotalPagesTag;
    private javax.swing.JScrollPane VMScrollPane;
    private javax.swing.JLabel VMTAg;
    private javax.swing.JList<String> VirtualMemoryList;
    private javax.swing.DefaultListModel VirtualMemoryModel;
    // End of variables declaration//GEN-END:variables
}
